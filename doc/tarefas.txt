
ok => 1 - pesquisa de anúncios precisa resolver busca por mais de um termo...
- retirar artigos e preposições da string de pesquisa
- separar termos em um array
- interar o array para montar a pesquisa com um like para cada termo no titulo e descricao


0k => 2 - autocompletar:  precisa alimentar a base de termos a partir de anúncios inseridos...
- na insercao ou alteracao  separar termos
- separacao deve ser em expressões e palavras
- pesquisar na base de termos e incluir se não existir na base


3 - avaliação: ajuste para impedir que o usuário faça varias avaliações para o mesmo anúncio...
- fazer uma tabela que registre o token do avaliador e o id anuncio do avaliado (ou token tbem...)


ok => 4 - resolver acento e case insensitive...
- case: ilike
- acento :

ok => 5 - login: tornar único pelo id do facebook (ou seja, se eu fizer post com um id que já tenha na base, tem que atualizar token, celular, universidade e não criar outro user)

ok => 6 - quando o vendedor marcar fechado, outros users não podem ver mais aquele ad


ok => 7 - anuncio deve conter o id_usuario ao inves do token... 

ok => 8 - app não está enviando "celular" e "id_instituicao"

------------------------------------------------------------------------------------
MVP 2
Requisitos Funcionais

RF1. Fluxo de negociação por chat interno (ver mockup);

ok => RF2. Permitir adicionar mais fotos (entre 1 e 5) por anúncio;


Tipos de anuncio: 

	criar campo na tabela de anuncios (char d, l, e, c, v)

	RF3. Anúncios do tipo “doação”, sem preço. 
		- a tela deverá mostrar doação no lugar do preço.


	RF4. Anúncios do tipo “comércio local”: agenda do vendedor sem o fluxo “fechar negócio”, com chat para dúvidas, tabela de itens+preço, e pontos de encontro por data de exposição;
		- campo byte com dias da semana ou na descrição 		

	RF5. Anúncios do tipo “evento”: sem fluxo “fechar negócio”, com chat, contato e pontos de venda, ordenando na busca por data de evento ao invés de data de publicação;
		- campo data do evento


ok => RF6. Exibir tempo de anúncio (“n h[oras]/d[ias]/s[emanas]/m[eses]”);

ok => RF7. Exibir na tela inicial anúncios com maior interação do local atual (universidade);
	ok -> criar campo visualizacoes
	ok -> listar dos n mais visualizacoes por local
	ok -> incrementar visualizacoes quando entrar no detalhes do anuncio;

RF8. Opção de perfil “lojista” ao fazer login (ver mockup);
	

RF9. Perfil lojista com tela inicial mostrando anúncios ordenados por tempo ou valor e fluxo de oferta (mockup);

Requisitos Não Funcionais
RNF1. Incrementar logs e informações de visualização de anúncio;

RNF2. Analytics no aplicativo;

RNF3. Upload e download de imagens em segundo plano.



1111100
0101000
1010100
